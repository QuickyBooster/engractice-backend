package server

import (
	_ "engractice/docs" // docs is generated by Swag CLI, you have to import it.
	"engractice/internal/controllers"
	"engractice/internal/database"
	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/fiber/v2/middleware/cors"
	"github.com/gofiber/swagger"
)

func (s *FiberServer) RegisterFiberRoutes(vocabulary *controllers.VocabularyController) {
	// Apply CORS middleware
	s.App.Use(cors.New(cors.Config{
		AllowOrigins:     "*",
		AllowMethods:     "GET,POST,PUT,DELETE,OPTIONS,PATCH",
		AllowHeaders:     "Accept,Authorization,Content-Type",
		AllowCredentials: false, // credentials require explicit origins
		MaxAge:           300,
	}))
	s.App.Get("/swagger/*", swagger.HandlerDefault) // default
	s.App.Get("/health", healthHandler)

	v1 := s.App.Group("/api/v1")
	v1.Post("/vocabulary", vocabulary.Create)
	v1.Get("/vocabulary", vocabulary.GetAll)
	v1.Get("/vocabulary/search", vocabulary.Search)
	v1.Get("/vocabulary/:id", vocabulary.GetByID)
	v1.Put("/vocabulary/:id", vocabulary.Update)
	v1.Delete("/vocabulary/:id", vocabulary.Delete)

}

func healthHandler(c *fiber.Ctx) error {
	db := database.New()
	return c.JSON(db.Health())
}
