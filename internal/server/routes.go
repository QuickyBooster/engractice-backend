package server

import (
	_ "engractice/docs" // docs is generated by Swag CLI, you have to import it.
	"engractice/internal/controllers"
	"engractice/internal/database"
	"log"
	"time"

	"github.com/gofiber/fiber/v2"
	"github.com/gofiber/fiber/v2/middleware/cors"
	"github.com/gofiber/swagger"
)

func requestLogger(c *fiber.Ctx) error {
	start := time.Now()
	// log.Printf("%s %s %s", c.Method(), c.Path(), c.IP())
	err := c.Next()
	log.Printf("%s %s %s %d %s", c.Method(), c.Path(), c.IP(), c.Response().StatusCode(), time.Since(start))
	return err
}

func (s *FiberServer) RegisterFiberRoutes(vocabularrCtl *controllers.VocabularyController, testCtl *controllers.TestController) {
	s.App.Use(requestLogger)
	// Apply CORS middleware
	s.App.Use(cors.New(cors.Config{
		AllowOrigins:     "*",
		AllowMethods:     "GET,POST,PUT,DELETE,OPTIONS,PATCH",
		AllowHeaders:     "Accept,Authorization,Content-Type",
		AllowCredentials: false, // credentials require explicit origins
		MaxAge:           300,
	}))
	s.App.Get("/swagger/*", swagger.HandlerDefault) // default

	v1 := s.App.Group("/api/v1")

	// Register the test routes
	test := v1.Group("/test")
	test.Post("/", testCtl.CreateTest)
	// Register the vocabulary routes
	vocabulary := v1.Group("/vocabulary")
	vocabulary.Get("/", vocabularrCtl.GetVocabulary)
	vocabulary.Post("/", vocabularrCtl.UpdateVocabulary)

}

func ConnectSpreadsheet(c *fiber.Ctx) error {
	db := database.NewDatabase()
	if db == nil {
		return c.Status(fiber.StatusInternalServerError).JSON(fiber.Map{
			"error": "Failed to connect to the spreadsheet service",
		})
	}
	return c.Status(fiber.StatusOK).JSON("Connected to Google Sheets successfully")
}
